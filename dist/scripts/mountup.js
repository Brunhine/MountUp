!function(t){var e={};function s(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(n,o,function(e){return t[e]}.bind(null,o));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="modules/mountup/scripts/",s(s.s="./src/scripts/mountup.js")}({"./src/scripts/chatter.js":
/*!********************************!*\
  !*** ./src/scripts/chatter.js ***!
  \********************************/
/*! exports provided: Chatter */function(t,e,s){"use strict";s.r(e),s.d(e,"Chatter",(function(){return i}));var n=s(/*! ./settings.js */"./src/scripts/settings.js"),o=s(/*! ./utils.js */"./src/scripts/utils.js");class i{static mountMessage(t,e){if(n.Settings.getShouldChat()){let s=`<span class="fa-stack"><i class="fas ${n.Settings.getIconClass()} fa-stack-1x"></i></span>&nbsp;`;this.sendChatMessage(s+n.Settings.getMountMessage(),t,e)}}static dismountMessage(t,e){if(n.Settings.getShouldChat()){let s=`<span class="fa-stack" >\n                            <i class="fas ${n.Settings.getIconClass()} fa-stack-1x"></i>\n                            <i class="fas fa-slash fa-stack-1x" style="color: tomato"></i>\n                        </span>&nbsp;`;this.sendChatMessage(s+n.Settings.getDismountMessage(),t,e)}}static sendChatMessage(t,e,s){let n=Object(o.findTokenById)(e),i=Object(o.findTokenById)(s);t=t.replace("{mount}",i.data.name).replace("{rider}",n.data.name),ChatMessage.create({content:t})}}},"./src/scripts/macros.js":
/*!*******************************!*\
  !*** ./src/scripts/macros.js ***!
  \*******************************/
/*! exports provided: mount, dismount, dropRider */function(t,e,s){"use strict";s.r(e),s.d(e,"mount",(function(){return i})),s.d(e,"dismount",(function(){return a})),s.d(e,"dropRider",(function(){return r}));var n=s(/*! ./mountManager.js */"./src/scripts/mountManager.js"),o=s(/*! ./utils.js */"./src/scripts/utils.js");function i(t,e){let s=Object(o.findTokenById)(t)||Object(o.findTokenByName)(t),i=Object(o.findTokenById)(e)||Object(o.findTokenByName)(e);s?i?s.id!=i.id?n.MountManager.doCreateMount(s,i):Object(o.error)("You cannot mount a token to itself"):Object(o.error)("A token could not be found with the name or id : "+mountName):Object(o.error)("A token could not be found with the name or id : "+riderName)}function a(t){let e=Object(o.findTokenById)(t)||Object(o.findTokenByName)(t);e?n.MountManager.isaRider(e.id)?n.MountManager.doRemoveMount(e,Object(o.findTokenById)(e.getFlag(o.FlagScope,o.Flags.Mount))):Object(o.error)(`Token '${e.name}' is not a rider`):Object(o.error)("A token could not be found with the name or id : "+t)}function r(t){let e=Object(o.findTokenById)(t)||Object(o.findTokenByName)(t);e?n.MountManager.isaMount(e.id)?n.MountManager.doRemoveMount(Object(o.findTokenById)(e.getFlag(o.FlagScope,o.Flags.Rider)),e):Object(o.error)(`Token '${e.name}' is not a mount`):Object(o.error)("A token could not be found with the name or id : "+t)}},"./src/scripts/mountHud.js":
/*!*********************************!*\
  !*** ./src/scripts/mountHud.js ***!
  \*********************************/
/*! exports provided: MountHud */function(t,e,s){"use strict";s.r(e),s.d(e,"MountHud",(function(){return a}));var n=s(/*! ./mountManager.js */"./src/scripts/mountManager.js"),o=s(/*! ./settings.js */"./src/scripts/settings.js"),i=s(/*! ./utils.js */"./src/scripts/utils.js");class a{static async renderMountHud(t,e,s){canvas.tokens.controlled.find(t=>t.id==s._id);1==canvas.tokens.controlled.length?(n.MountManager.isaMount(canvas.tokens.controlled[0].id)&&this.addRemoveRidersButton(e,s),n.MountManager.isaRider(canvas.tokens.controlled[0].id)&&this.addDismountButton(e,s)):this.addMountButton(e,s)}static addMountButton(t,e){let s=canvas.tokens.controlled.filter(t=>t.id!=e._id).map(t=>`'${t.name}'`);this.buildButton(t,`Mount ${s.join(", ").replace(/, ([^,]*)$/," and $1")} on to ${e.name}`).find("i").click(async t=>{n.MountManager.mountUp(e)})}static addDismountButton(t,e){const s=Object(i.findTokenById)(e._id);let o=this.buildButton(t,`Dismount ${e.name} from ${Object(i.findTokenById)(s.getFlag(i.FlagScope,i.Flags.Mount)).name}`);o=this.addSlash(o),o.find("i").click(async t=>{n.MountManager.dismount(e)})}static addRemoveRidersButton(t,e){let s=this.buildButton(t,"Remove all riders from "+e.name);s=this.addSlash(s),s.find("i").click(async t=>{n.MountManager.removeAllRiders(e)})}static buildButton(t,e){let s=$(`<div class="control-icon mount-up" title="${e}"><i class="fas ${o.Settings.getIconClass()}"></i></div>`),n=t.find(o.Settings.getHudColumnClass());return"top"==o.Settings.getHudTopBottomClass()?n.prepend(s):n.append(s),s}static async addButton(t,e,s=!1){let i=$(`<div class="control-icon mount-up"><i class="fas ${o.Settings.getIconClass()}"></i></div>`);s&&this.addSlash(i);let a=t.find(o.Settings.getHudColumnClass());"top"==o.Settings.getHudTopBottomClass()?a.prepend(i):a.append(i),i.find("i").click(async t=>{n.MountManager.mountUp(e)&&(s?this.removeSlash(i):this.addSlash(i))})}static addSlash(t){let e=$('<i class="fas fa-slash" style="position: absolute; color: tomato"></i>');return t.addClass("fa-stack"),t.find("i").addClass("fa-stack-1x"),e.addClass("fa-stack-1x"),t.append(e),t}static removeSlash(t){t.find("i")[1].remove()}}},"./src/scripts/mountManager.js":
/*!*************************************!*\
  !*** ./src/scripts/mountManager.js ***!
  \*************************************/
/*! exports provided: MountManager */function(t,e,s){"use strict";s.r(e),s.d(e,"MountManager",(function(){return a}));var n=s(/*! ./chatter.js */"./src/scripts/chatter.js"),o=s(/*! ./settings.js */"./src/scripts/settings.js"),i=s(/*! ./utils.js */"./src/scripts/utils.js");class a{static async mountUp(t){const e=canvas.tokens.controlled.find(e=>e.id==t._id);for(const s of canvas.tokens.controlled)if(s.id!=e.id){if(this.isaRider(s.id)&&!this.isRidersMount(s.id,t._id)){Object(i.warn)(`Couldn't mount '${s.name}' on to '${t.name}' because                         it is already mounted to '${Object(i.findTokenById)(s.getFlag(i.FlagScope,i.Flags.Mount)).name}'.`);continue}if(this.isAncestor(e.id,s.id))continue;let o=e.getFlag(i.FlagScope,i.Flags.Riders);if(null==o&&(o=[]),o.includes(s.id)||o.push(s.id),await e.unsetFlag(i.FlagScope,i.Flags.Riders),await e.setFlag(i.FlagScope,i.Flags.Riders,o),await s.setFlag(i.FlagScope,i.Flags.Mount,e.id),await s.setFlag(i.FlagScope,i.Flags.OrigSize,{w:s.w,h:s.h}),n.Chatter.mountMessage(s.id,e.id),s.w>=e.w||s.h>=e.h){let t=canvas.scene.data.grid,n=e.w/2/t,o=e.h/2/t;await s.update({width:n,height:o}),s.zIndex=e.zIndex+10}let a=this.getRiderInitialLocation(s,e);await s.setFlag(i.FlagScope,i.Flags.MountMove,!0),await s.update({x:a.x,y:a.y}),s.zIndex=e.zIndex+10}e.parent.sortChildren()}static async dismount(t){const e=Object(i.findTokenById)(t._id),s=Object(i.findTokenById)(e.getFlag(i.FlagScope,i.Flags.Mount));this.doRemoveMount(e,s)}static async removeAllRiders(t){const e=Object(i.findTokenById)(t._id);for(const t of e.getFlag(i.FlagScope,i.Flags.Riders)){const s=Object(i.findTokenById)(t);this.doRemoveMount(s,e)}}static async doCreateMount(t,e){let s=e.getFlag(i.FlagScope,i.Flags.Riders);return null==s&&(s=[]),s.includes(t.id)||s.push(t.id),console.log(s),await e.update({flags:{mountup:{riders:s}}}),await t.setFlag(i.FlagScope,i.Flags.Mount,e.id),await t.setFlag(i.FlagScope,i.Flags.OrigSize,{w:t.w,h:t.h}),this.moveRiderToMount(t,{x:e.x,y:e.y}),n.Chatter.mountMessage(t.id,e.id),!0}static async doRemoveMount(t,e){await t.setFlag(i.FlagScope,i.Flags.MountMove,!0),this.restoreRiderSize(t),n.Chatter.dismountMessage(t.id,e.id);const s=e.getFlag(i.FlagScope,i.Flags.Riders);return await e.unsetFlag(i.FlagScope,i.Flags.Riders),s.splice(s.indexOf(t.id)),await e.setFlag(i.FlagScope,i.Flags.Riders,s),await t.unsetFlag(i.FlagScope,i.Flags.Mount),await t.unsetFlag(i.FlagScope,i.Flags.OrigSize),!0}static async restoreRiderSize(t){let e=t.getFlag(i.FlagScope,i.Flags.OrigSize);if(t.w<e.w||t.h<e.h){let s=canvas.scene.data.grid,n=t.w<e.w?e.w:t.w,o=t.h<e.h?e.h:t.H;await t.update({width:n/s,height:o/s})}t.parent.sortChildren()}static async handleTokenDelete(t){let e=Object(i.findTokenById)(t);if(this.isaRider(e.id)){let t=Object(i.findTokenById)(e.getFlag(i.FlagScope,i.Flags.Mount));await t.unsetFlag(i.FlagScope,i.Flags.Riders)}if(this.isaMount(e.id)){let t=Object(i.findTokenById)(e.getFlag(i.FlagScope,i.Flags.Riders));await t.unsetFlag(i.FlagScope,i.Flags.Mount),await t.unsetFlag(i.FlagScope,i.Flags.OrigSize)}return!0}static popAllRiders(){canvas.tokens.placeables.forEach(t=>{this.isaMount(t.id)&&!this.isaRider(t.id)&&this.popRider(t.id)})}static async popRider(t,e=0){if(e>100)return Object(i.error)("Pop riders called too many times. Breaking all rides for safety."),canvas.tokens.placeables.forEach(t=>{t.unsetFlag("mountup","riders"),t.unsetFlag("mountup","mount")}),!0;let s=Object(i.findTokenById)(t);for(const t of s.getFlag(i.FlagScope,i.Flags.Riders)){const n=Object(i.findTokenById)(t);n&&(n.zIndex=s.zIndex+10),this.isaMount(n.id)&&this.popRider(n.id,e+=1),n.owner&&await n.unsetFlag(i.FlagScope,i.Flags.MountMove)}return s.parent.sortChildren(),!0}static async doTokenUpdate(t,e){if(this.isaRider(t)){const s=Object(i.findTokenById)(t),n=Object(i.findTokenById)(s.getFlag(i.FlagScope,i.Flags.Mount)),a={x:void 0!==e.x?e.x:s.x,y:void 0!==e.y?e.y:s.y};if(!s.getFlag(i.FlagScope,i.Flags.MountMove))switch(o.Settings.getRiderLock()){case i.riderLock.NoLock:break;case i.riderLock.LockLocation:delete e.x,delete e.y,Object(i.warn)(s.name+" is currently locked to a mount");break;case i.riderLock.LockBounds:this.isInsideTokenBounds(a,n)||(delete e.x,delete e.y,Object(i.warn)(s.name+" is currently locked inside a mount"));break;case i.riderLock.Dismount:this.isInsideTokenBounds(a,n)||this.doRemoveMount(s,n)}}if(this.isaMount(t)){const s=Object(i.findTokenById)(t);e.x=void 0!==e.x?e.x:s.x,e.y=void 0!==e.y?e.y:s.y,e.rotation=void 0!==e.rotation?e.rotation:s.data.rotation;const n={x:s.x,y:s.y};for(const t of s.getFlag(i.FlagScope,i.Flags.Riders)){const a=Object(i.findTokenById)(t);if(a.owner)await this.moveRiderToMount(a,n,e.x,e.y,e.rotation||s.data.rotation);else{const t={x:n.x-a.x,y:n.y-a.y},s=o.Settings.getRiderRotate()?e.rotation:a.data.rotation;game.socket.emit(i.socketName,{mode:i.socketAction.UpdateToken,riderId:a.id,x:e.x-t.x,y:e.y-t.y,rotation:s})}}}}static isInsideTokenBounds(t,e){e.x,e.w,e.y,e.h;return t.x>=e.x&&t.x<e.x+e.w&&t.y>=e.y&&t.y<e.y+e.h}static isaMount(t){let e=Object(i.findTokenById)(t);return!!e&&(null!=e.getFlag(i.FlagScope,i.Flags.Riders)&&e.getFlag(i.FlagScope,i.Flags.Riders).length>0)}static isaRider(t){let e=Object(i.findTokenById)(t);return!!e&&null!=e.getFlag("mountup","mount")}static isRidersMount(t,e){let s=Object(i.findTokenById)(t),n=Object(i.findTokenById)(e);return s.getFlag(i.FlagScope,i.Flags.Mount)==n.id}static async moveRiderToMount(t,e,s,n,a){t=Object(i.findTokenById)(t.id),await t.setFlag(i.FlagScope,i.Flags.MountMove,!0);const r=e.x-t.x,d=e.y-t.y;a=o.Settings.getRiderRotate()&&void 0!==a?a:t.rotation,await t.update({x:void 0===s?e.x-r:s-r,y:void 0===n?e.y-d:n-d,rotation:a})}static getRiderInitialLocation(t,e){let s={x:e.x,y:e.y};switch(o.Settings.getRiderX()){case i.riderX.Center:let n=e.getCenter(e.x,e.y);s.x=n.x-t.w/2;break;case i.riderX.Right:s.x=e.x+e.w-t.w}switch(o.Settings.getRiderY()){case i.riderY.Center:let n=e.getCenter(e.x,e.y);s.y=n.y-t.h/2;break;case i.riderY.Bottom:s.y=e.y+e.h-t.h}return s}static isAncestor(t,e){if(this.isaRider(t)){let s=Object(i.findTokenById)(t),n=Object(i.findTokenById)(s.getFlag(i.FlagScope,i.Flags.Mount));return n.id==e||this.isAncestor(n.id,e)}return!1}}},"./src/scripts/mountup.js":
/*!********************************!*\
  !*** ./src/scripts/mountup.js ***!
  \********************************/
/*! no exports provided */function(t,e,s){"use strict";s.r(e);var n=s(/*! ./macros.js */"./src/scripts/macros.js"),o=s(/*! ./mountHud.js */"./src/scripts/mountHud.js"),i=s(/*! ./mountManager.js */"./src/scripts/mountManager.js"),a=s(/*! ./settings.js */"./src/scripts/settings.js"),r=s(/*! ./utils.js */"./src/scripts/utils.js");Hooks.on("ready",()=>{a.Settings.registerSettings(),game.socket.on(r.socketName,t=>{if(game.user.isGM)switch(t.mode){case r.socketAction.UpdateToken:Object(r.findTokenById)(t.riderId).update({x:t.x,y:t.y,rotation:t.rotation})}}),window.MountUp={mount:n.mount,dismount:n.dismount,dropRider:n.dropRider}}),Hooks.on("canvasReady",()=>{i.MountManager.popAllRiders()}),Hooks.on("renderTokenHUD",(t,e,s)=>{o.MountHud.renderMountHud(t,e,s)}),Hooks.on("preUpdateToken",async(t,e,s)=>{(s.hasOwnProperty("x")||s.hasOwnProperty("y")||s.hasOwnProperty("rotation"))&&await i.MountManager.doTokenUpdate(e._id,s)}),Hooks.on("updateToken",async(t,e,s)=>{i.MountManager.isaMount(s._id)&&i.MountManager.popRider(s._id)}),Hooks.on("controlToken",async t=>{i.MountManager.isaMount(t.id)&&await i.MountManager.popRider(t.id)}),Hooks.on("preDeleteToken",async(t,e)=>(await i.MountManager.handleTokenDelete(e._id),!0))},"./src/scripts/settings.js":
/*!*********************************!*\
  !*** ./src/scripts/settings.js ***!
  \*********************************/
/*! exports provided: modName, iconOptions, hudColumns, hudTopBottom, riderXOptions, riderYOptions, riderLockOptions, Settings */function(t,e,s){"use strict";s.r(e),s.d(e,"modName",(function(){return o})),s.d(e,"iconOptions",(function(){return a})),s.d(e,"hudColumns",(function(){return r})),s.d(e,"hudTopBottom",(function(){return d})),s.d(e,"riderXOptions",(function(){return c})),s.d(e,"riderYOptions",(function(){return u})),s.d(e,"riderLockOptions",(function(){return g})),s.d(e,"Settings",(function(){return l}));var n=s(/*! ./settingsForm.js */"./src/scripts/settingsForm.js");const o="Mount Up",i="mountup",a=["Horse","People Carrying","Hands","Open Hand","Fist","Handshake"],r=["Left","Right"],d=["Top","Bottom"],c=["Left","Center","Right"],u=["Top","Center","Bottom"],g=["mu.settings.riderLock.noLock","Lock to location","Lock to mount bounds","Dismount when outside mount bounds"];class l{static getIcon(){return game.settings.get(i,"icon")}static setIcon(t){game.settings.set(i,"icon",t)}static getHudColumn(){return game.settings.get(i,"column")}static setHudColumn(t){game.settings.set(i,"column",t)}static getHudTopBottom(){return game.settings.get(i,"topbottom")}static setHudTopBottom(t){game.settings.set(i,"topbottom",t)}static getRiderX(){return game.settings.get(i,"rider-x")}static setRiderX(t){game.settings.set(i,"rider-x",t)}static getRiderY(){return game.settings.get(i,"rider-y")}static setRiderY(t){game.settings.set(i,"rider-y",t)}static getShouldChat(){return game.settings.get(i,"should-chat")}static setShouldChat(t){game.settings.set(i,"should-chat",t)}static getRiderLock(){return game.settings.get(i,"lock-riders")}static setRiderLock(t){game.settings.set(i,"lock-riders",t)}static getRiderRotate(){return game.settings.get(i,"rider-rotate")}static setRiderRotate(t){game.settings.set(i,"rider-rotate",t)}static getMountMessage(){return game.settings.get(i,"mount-message")}static setMountMessage(t){game.settings.set(i,"mount-message",t)}static getDismountMessage(){return game.settings.get(i,"dismount-message")}static setDismountMessage(t){game.settings.set(i,"dismount-message",t)}static getHudColumnClass(){return 0==game.settings.get(i,"column")?".col.left":".col.right"}static getHudTopBottomClass(){return 0==game.settings.get(i,"topbottom")?"top":"bottom"}static getIconClass(){switch(game.settings.get(i,"icon")){case 0:return"fa-horse";case 1:return"fa-people-carry";case 2:return"fa-hands";case 3:return"fa-hand-holding";case 4:return"fa-fist-raised";case 5:return"fa-handshake"}}static registerSettings(){game.settings.registerMenu(i,"settingsMenu",{name:"mu.settings.button.name",label:"mu.settings.button.label",icon:"fas fa-horse",type:n.SettingsForm,restricted:!0}),game.settings.register(i,"icon",{scope:"world",config:!1,type:Number,default:0,choices:a}),game.settings.register(i,"column",{scope:"world",config:!1,type:Number,default:0,choices:r}),game.settings.register(i,"topbottom",{scope:"world",config:!1,type:Number,default:0,choices:d}),game.settings.register(i,"lock-riders",{scope:"world",config:!1,type:Number,default:3,choices:g}),game.settings.register(i,"rider-rotate",{scope:"world",config:!1,type:Boolean,defualt:!1}),game.settings.register(i,"rider-x",{scope:"world",config:!1,type:Number,defualt:1,choices:c}),game.settings.register(i,"rider-y",{scope:"world",config:!1,type:Number,defualt:0,choices:u}),game.settings.register(i,"should-chat",{scope:"world",config:!1,type:Boolean,default:!0}),game.settings.register(i,"mount-message",{scope:"world",config:!1,type:String,default:"{rider} has mounted {mount}."}),game.settings.register(i,"dismount-message",{scope:"world",config:!1,type:String,default:"{rider} has dismounted from {mount}."})}}},"./src/scripts/settingsForm.js":
/*!*************************************!*\
  !*** ./src/scripts/settingsForm.js ***!
  \*************************************/
/*! exports provided: SettingsForm */function(t,e,s){"use strict";s.r(e),s.d(e,"SettingsForm",(function(){return o}));var n=s(/*! ./settings.js */"./src/scripts/settings.js");class o extends FormApplication{constructor(t,e={}){super(t,e)}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"mountup-settings-form",title:"Mount Up! - Settings",template:"./modules/mountup/templates/settings.html",classes:["sheet"],width:500,closeOnSubmit:!0})}getData(){return{icons:this.getSelectList(n.iconOptions,n.Settings.getIcon()),hudColumn:this.getSelectList(n.hudColumns,n.Settings.getHudColumn()),hudTopBottom:this.getSelectList(n.hudTopBottom,n.Settings.getHudTopBottom()),riderLock:this.getSelectList(n.riderLockOptions,n.Settings.getRiderLock()),riderRotate:n.Settings.getRiderRotate(),riderX:this.getSelectList(n.riderXOptions,n.Settings.getRiderX()),riderY:this.getSelectList(n.riderYOptions,n.Settings.getRiderY()),shouldChat:n.Settings.getShouldChat(),mountMsg:n.Settings.getMountMessage(),dismountMsg:n.Settings.getDismountMessage()}}async _updateObject(t,e){n.Settings.setIcon(e.icon),n.Settings.setHudColumn(e.hudColumn),n.Settings.setHudTopBottom(e.hudTopBottom),n.Settings.setRiderLock(e.riderLock),n.Settings.setRiderRotate(e.riderRotate),n.Settings.setRiderX(e.riderX),n.Settings.setRiderY(e.riderY),n.Settings.setShouldChat(e.shouldChat),n.Settings.setMountMessage(e.mountMsg),n.Settings.setDismountMessage(e.dismountMsg)}activateListeners(t){super.activateListeners(t)}getSelectList(t,e){let s=[];return t.forEach((t,n)=>{s.push({value:t,selected:n==e})}),s}}},"./src/scripts/utils.js":
/*!******************************!*\
  !*** ./src/scripts/utils.js ***!
  \******************************/
/*! exports provided: FlagScope, Flags, socketName, socketAction, riderX, riderY, riderLock, firstGM, logMessage, warn, error, info, findTokenById, findTokenByName */function(t,e,s){"use strict";s.r(e),s.d(e,"FlagScope",(function(){return o})),s.d(e,"Flags",(function(){return i})),s.d(e,"socketName",(function(){return a})),s.d(e,"socketAction",(function(){return r})),s.d(e,"riderX",(function(){return d})),s.d(e,"riderY",(function(){return c})),s.d(e,"riderLock",(function(){return u})),s.d(e,"firstGM",(function(){return g})),s.d(e,"logMessage",(function(){return l})),s.d(e,"warn",(function(){return m})),s.d(e,"error",(function(){return p})),s.d(e,"info",(function(){return f})),s.d(e,"findTokenById",(function(){return h})),s.d(e,"findTokenByName",(function(){return y}));var n=s(/*! ./settings.js */"./src/scripts/settings.js");const o="mountup",i={Mount:"mount",Riders:"riders",OrigSize:"origsize",MountMove:"mountMove"},a="module.mountup",r={Mount:0,Dismount:1,UpdateToken:2},d={Left:0,Center:1,Right:2},c={Top:0,Center:1,Bottom:2},u={NoLock:0,LockLocation:1,LockBounds:2,Dismount:3};function g(){for(let t of game.users.entities)if(t.data.role>=4&&t.active)return t.data._id}function l(t,e=!1){(game.settings.get("mountup","debug")||e)&&console.log(`${n.modName} | ${t}`)}function m(t){ui.notifications.warn("Mount Up! : "+t)}function p(t){ui.notifications.error("Mount Up! : "+t),console.log("Mount Up! : "+t)}function f(t){ui.notifications.info("Mount Up! : "+t)}function h(t){return canvas.tokens.placeables.find(e=>e.id==t)}function y(t){return canvas.tokens.placeables.find(e=>e.name.toLowerCase()==t.toLowerCase())}}});
//# sourceMappingURL=mountup.js.map